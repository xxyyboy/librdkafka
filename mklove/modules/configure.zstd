#!/bin/bash
#
# libzstd support, with installer
#
# Usage:
#   mkl_require zstd [failure-action]
#
# Where failure-action is disable, ignore or fail
#
# And then call the following function from the correct place in checks:
#   mkl_check zstd
#

if [[ -z $1 ]]; then
    mkl_zstd_action=disable
else
    mkl_zstd_action=$1
fi


function manual_checks {
    mkl_meta_set "zstd" "deb" "libzstd-dev"
    mkl_meta_set "zstd" "brew" "zstd"
    mkl_lib_check --static=-lzstd "libzstd" "WITH_ZSTD" $mkl_zstd_action CC "-lzstd" \
                  "
#include <zstd.h>
#include <zstd_errors.h>

void foo (void) {
     ZSTD_getFrameContentSize(NULL, 0);
}
"



}


# Install zstd from source tarball
#
# Param 1: name (zstd)
# Param 2: version (optional)
function install_source {
    local name=$1
    local ver=$2
    local bdir=$(mkl_depdir)

    if [[ -z $ver ]]; then
        ver=1.3.8
    fi

    if [[ ! -f Makefile ]]; then
        curl -sL https://github.com/facebook/zstd/releases/download/v${ver}/zstd-${ver}.tar.gz | \
            tar xzf - --strip-components 1
    fi
    time make DESTDIR=${bdir} all install

    # Set static library path.
    declare -g STATIC_LIB_${name}=$(find "$bdir/lib" -name libzstd.a)
}


function checks {

    mkl_meta_set "zstd" "deb" "libzstd-dev"
    mkl_meta_set "zstd" "brew" "zstd"
    mkl_lib_check --static=-lzstd "zstd" "WITH_ZSTD" disable CC "-lzstd" \
                  "
#include <zstd.h>
#include <zstd_errors.h>

void foo (void) {
     ZSTD_getFrameContentSize(NULL, 0);
}
"

}
